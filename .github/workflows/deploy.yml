name: Deploy to Azure Container Apps

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-azurewebapp
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: AzureWebApp-RG
  ACR_NAME: azurewebappregistry
  CONTAINER_APP_NAME: azurewebapp
  CONTAINER_APP_ENV: AzureWebApp-CAE
  LOCATION: northeurope
  IMAGE_NAME: azurewebapp
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Azure login via OIDC (uses repo secrets with IDs only) ---
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # --- Diagnostics to confirm identity & access (optional but useful) ---
      - name: Who am I in Azure?
        run: |
          echo "== Account =="
          az account show --output table
          echo "== Raw principal =="
          az account show --query user -o json

      - name: Check access to resources
        run: |
          echo "== Resource Group =="
          az group show -n $AZURE_RESOURCE_GROUP --out table
          echo "== ACR =="
          az acr show -n $ACR_NAME -g $AZURE_RESOURCE_GROUP --out table
          echo "== Container App (may not exist yet) =="
          az containerapp show -n $CONTAINER_APP_NAME -g $AZURE_RESOURCE_GROUP --out table || true

      # --- Build & deploy (NO yamlConfigPath) ---
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}
          acrName: ${{ env.ACR_NAME }}
          resourceGroup: ${{ env.AZURE_RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENV }}
          location: ${{ env.LOCATION }}
          ingress: external
          targetPort: 80
          imageToBuild: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # --- Show the public URL when ready ---
      - name: Show app URL
        if: always()
        run: |
          FQDN=$(az containerapp show -g $AZURE_RESOURCE_GROUP -n $CONTAINER_APP_NAME --query properties.configuration.ingress.fqdn -o tsv 2>/dev/null || true)
          if [ -n "$FQDN" ]; then
            echo "âœ… Deployed: https://$FQDN"
          else
            echo "Deployment finished. If this is the first create, the FQDN may appear shortly."
          fi
